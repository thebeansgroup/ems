= simple_form_for @article do |f|
  - main_content "Article List" do
    %fieldset{ :class=>"inputs"}
      %ol
        %li
          = f.input :title

        %li
          = f.input :standfirst, :input_html => { :rows => 4 }

        %li
          = f.input :image
          
        %li
          #button-bar.input-buttons
          = f.label :content
          = f.input_field :content

        %li
          = f.label "Asset store"
          / = f.fields_for :assets do |builder|
          /   - if builder.object.new_record?
          /     = builder.label :asset
          /     = builder.file_field :asset
          /   - else
          /     = image_tag builder.object.image.url
        / %li
        /   - for i in @article.images
        /     %p= i.title
        /     = image_tag i.image.url

    %fieldset{ :class=>"button"}
      %ol
        %li
          = f.submit

  - side_content do
    %fieldset{ :class=>"inputs"}
      %ol
        %li
          = f.input :status, :as => :select, :collection => [:draft, :pending, :live], :include_blank => false

        %li
          = f.input :publish_from, :as => :string, :input_html => { :class => 'datepicker', :value =>  @article.try(:publish_from).try(:strftime,'%d/%m/%Y'), :data => { :alt_date => "alt-date-" }}

        %li
          = f.association :channels, :collection => Ems::Channel.joins(:categories).where(:ems_categories_channels => {:category_id => @article.category.id})

        %li
          / this works but needs tidying in CSS, JS and markup
          = f.label :tags
          %input{ :type=>:text, :data => { :tagcomplete => "/ems/tags.json" }}
          %ul#tag-list.pill-list
            - @article.tags.each do |tag|
              %li.pill{:id=>"tag-list-#{tag.id}"}= tag.title
          .hidden_fields
            = f.association :tags

        %li
          = f.label "Article Priority"
          = f.input :hot
          = f.input :featured
