= simple_form_for @article, :url => article_form_url do |f|
  - main_content "Article List" do
    %fieldset{ :class=>"inputs"}
      = f.association :category, :as => :hidden
      %ol
        %li
          = f.input :title

        %li
          = f.input :standfirst, :input_html => { :rows => 4 }

        %li
          = f.input :image
          
        %li
          #button-bar.input-buttons
          = f.label :content
          = f.input_field :content, :data => {:wmd => "article_content"}

        %li.asset-store
          = f.label "Asset Manager"
          = f.fields_for :assets do |builder|

            - if not builder.object.new_record?
              .asset-item
                = image_tag builder.object.asset.url
                = builder.hidden_field :title, :class=>"asset-title-hidden"
                %input{:type=>"checkbox", :id=>"asset-item-#{builder.object.id}", :class=>"asset-check", :checked=>true}
                %p.asset-text= builder.object.title
                %p= builder.object.asset.url

            - else
              .asset-uploader.input-push
                = builder.file_field :asset
                / = builder.text_field :title

    %fieldset{ :class=>"button"}
      %ol
        %li
          = f.submit

  - side_content do
    %fieldset{ :class=>"inputs"}
      %ol
        %li
          = f.input :status, :as => :select, :collection => [:draft, :pending, :live], :include_blank => false

        %li
          = f.input :publish_from, :as => :string, :input_html => { :class => 'datepicker', :value =>  @article.try(:publish_from).try(:strftime,'%d/%m/%Y'), :data => { :alt_date => "alt-date-" }}

        %li
          = f.association :channels, :collection => Ems::Channel.joins(:categories).where(:ems_categories_channels => {:category_id => @article.category.id})

        %li
          / this works but needs tidying in CSS, JS and markup
          = f.label :tags
          %input{ :type=>:text, :data => { :tagcomplete => "/ems/tags.json", :tagcomplete_pills => "#tag-list" }}
          %ul#tag-list.pill-list
            - @article.tags.each do |tag|
              %li.pill{:id=>"tag-list-#{tag.id}"}
                = tag.title
                %span.close Ã—
          .hidden_fields
            = f.association :tags

        %li
          = f.label "Article Priority"
          = f.input :hot
          = f.input :featured
